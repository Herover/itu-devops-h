---
kind: pipeline
type: docker
name: Minitwit server

steps:
- name: sonar cube
  image: maven:3.8.4-openjdk-17-slim
  environment:
    SONAR_TOKEN:
      from_secret: SONAR_TOKEN
  commands:
  - cd minitwit
  - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Herover_itu-devops-h
  when:
    event:
      include:
      - pull_request

- name: build
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - cd minitwit
  - chmod +x ./control.sh
  - ./control.sh build
  - ls -al
  when:
    event:
      include:
      - pull_request

- name: test
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - echo Inser tests here...
  when:
    event:
      include:
      - pull_request


- name: semgrep scan
  image: returntocorp/semgrep-agent:v1
  commands:
  - echo Run semgrep scan
  - semgrep-agent --baseline-ref dev --config p/security-audit --config p/secrets
  when:
    event:
      include:
      - pull_request


- name: create and push docker image
  image: plugins/docker
  settings:
    registry: registry.digitalocean.com
    username:
      from_secret: token
    password:
      from_secret: token
    repo: registry.digitalocean.com/minitwit/minitwit-server
    tags:
      - "latest"
      - "${DRONE_BUILD_NUMBER}"
    dockerfile: minitwit/Dockerfile
    context: minitwit
  when:
    event:
    - promote

- name: snyk scan
  image: docker
  environment:
    SNYK_TOKEN:
      from_secret: SNYK_TOKEN
    DOCKER_USERNAME:
      from_secret: token
    DOCKER_PASSWORD:
      from_secret: token
    IMAGE: registry.digitalocean.com/minitwit/minitwit-server
  volumes:
    - name: dockersock
      path: /var/run/docker.sock
  commands:
  - wget https://static.snyk.io/cli/latest/snyk-linux
  - chmod +x ./snyk-linux
  - apk add libstdc++ libgcc gcompat
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.digitalocean.com
  - docker pull $IMAGE:$DRONE_BUILD_NUMBER
  - ./snyk-linux auth $SNYK_TOKEN
  # Threshold can be low|medium|high|critical, see https://support.snyk.io/hc/en-us/articles/360001040078-How-is-a-vulnerability-s-severity-determined- low is too low for us
  - ./snyk-linux container test --app-vulns --nested-jars-depth=3 --severity-threshold=medium --file=minitwit/Dockerfile --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD $IMAGE:$DRONE_BUILD_NUMBER && res=$? || res=$?
  - docker rmi $IMAGE:$DRONE_BUILD_NUMBER
  - exit $res
  when:
    event:
    - promote

- name: update live docker images
  image: alpine:3.15.0
  environment:
    DOCKER_USERNAME:
      from_secret: token
    DOCKER_PASSWORD:
      from_secret: token
    ROOT_PASSWORD:
      from_secret: root_password
    WEB_HOST:
      "143.198.249.10"
  commands:
  - apk add --no-cache sshpass openssh
  - sshpass -p "$ROOT_PASSWORD" scp -o StrictHostKeyChecking=no terraform/files/update_image.sh root@$WEB_HOST:/tmp/
  - sshpass -p "$ROOT_PASSWORD" ssh -o StrictHostKeyChecking=no root@$WEB_HOST chmod +x /tmp/update_image.sh
  - sshpass -p "$ROOT_PASSWORD" ssh -o StrictHostKeyChecking=no root@$WEB_HOST /tmp/update_image.sh registry.digitalocean.com/minitwit/minitwit-server $DRONE_BUILD_NUMBER $DOCKER_USERNAME $DOCKER_PASSWORD
  when:
    event:
    - promote

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---

kind: signature
hmac: 3c0a64af07e82ce70bccbea6d198be68a2b9f4547acdb0b0b46401b3cb0f342a
