kind: pipeline
type: docker
name: Minitwit server

steps:
- name: build
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - cd minitwit
  - chmod +x ./control.sh
  - ./control.sh build
  - ls -al
  when:
    event:
      include:
      - pull_request

- name: test
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - echo Inser tests here...
  when:
    event:
      include:
      - pull_request

- name: deploy
  image: plugins/docker
  #environment:
  #  DOCKER_USERNAME:
  #    from_secret: token
  #  DOCKER_PASSWORD:
  #    from_secret: token
  #  ROOT_PASSWORD:
  #    from_secret: root_password
  #  WEB_HOST:
  #    "143.198.249.10"
  settings:
    registry: registry.digitalocean.com
    username:
      from_secret: token
    password:
      from_secret: token
    repo: minitwit/minitwit-server
    tags:
      - latest
      - $DRONE_BUILD_NUMBER
    dockerfile: minitwit/Dockerfile
    context: minitwit
  #commands:
  #- cd minitwit
  #- docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.digitalocean.com
  #- docker build --tag registry.digitalocean.com/minitwit/minitwit-server:latest --tag registry.digitalocean.com/minitwit/minitwit-server:$DRONE_BUILD_NUMBER .
  #- docker push registry.digitalocean.com/minitwit/minitwit-server:latest
  #- docker push registry.digitalocean.com/minitwit/minitwit-server:$DRONE_BUILD_NUMBER
  ## Pull on prod server
  #- apt-get install sshpass
  #- sshpass -p "$ROOT_PASSWORD" scp -o StrictHostKeyChecking=no ../terraform/files/update_image.sh root@$WEB_HOST:/tmp/
  #- sshpass -p "$ROOT_PASSWORD" ssh -o StrictHostKeyChecking=no root@$WEB_HOST chmod +x /tmp/update_image.sh
  #- sshpass -p "$ROOT_PASSWORD" ssh -o StrictHostKeyChecking=no root@$WEB_HOST /tmp/update_image.sh registry.digitalocean.com/minitwit/minitwit-server $DRONE_BUILD_NUMBER $DOCKER_USERNAME $DOCKER_PASSWORD
  when:
    event:
    - promote
