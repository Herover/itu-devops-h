kind: pipeline
type: docker
name: Minitwit server

steps:
- name: build
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - cd minitwit
  - chmod +x ./control.sh
  - ./control.sh build
  - ls -al
  when:
    event:
      include:
      - pull_request

- name: test
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - echo Inser tests here...
  when:
    event:
      include:
      - pull_request

- name: deploy DOESNT WORK
  image: maven:3.8.4-openjdk-17-slim
  environment:
    DOCKER_USERNAME:
      from_secret: token
    DOCKER_PASSWORD:
      from_secret: token
    ROOT_PASSWORD:
      from_secret: root_password
    WEB_HOST:
      "143.198.249.10"
  commands:
  - chmod +x ./terraform/files/install_docker.sh
  - ./terraform/files/install_docker.sh
  - cd minitwit
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.digitalocean.com
  - docker build --tag registry.digitalocean.com/minitwit/minitwit-server:latest --tag registry.digitalocean.com/minitwit/minitwit-server:$DRONE_BUILD_NUMBER .
  - docker push registry.digitalocean.com/minitwit/minitwit-server:latest
  - docker push registry.digitalocean.com/minitwit/minitwit-server:$DRONE_BUILD_NUMBER
  # Pull on prod server
  - apt-get install sshpass
  - sshpass -p "$ROOT_PASSWORD" scp -o StrictHostKeyChecking=no ../terraform/files/update_image.sh root@$WEB_HOST:/tmp/
  - sshpass -p "$ROOT_PASSWORD" ssh -o StrictHostKeyChecking=no root@$WEB_HOST chmod +x /tmp/update_image.sh
  - sshpass -p "$ROOT_PASSWORD" ssh -o StrictHostKeyChecking=no root@$WEB_HOST /tmp/update_image.sh registry.digitalocean.com/minitwit/minitwit-server $DRONE_BUILD_NUMBER $DOCKER_USERNAME $DOCKER_PASSWORD
  when:
    # TODO: Change so it happens on merge to main/prod/some live branch
    event:
    - promote
