---
kind: pipeline
type: docker
name: Minitwit server pull request

trigger:
  event: [pull_request]

steps:
- name: semgrep scan
  image: returntocorp/semgrep-agent:v1
  commands:
  - echo Run semgrep scan

- name: sonar cube
  image: maven:3.8.4-openjdk-17-slim
  environment:
    SONAR_TOKEN:
      from_secret: SONAR_TOKEN
  commands:
  - cd minitwit
  - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Herover_itu-devops-h

- name: build
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - cd minitwit
  - chmod +x ./control.sh
  - ./control.sh build
  - ls -al

- name: test
  image: maven:3.8.4-openjdk-17-slim
  commands:
  - echo Inser tests here...

---

kind: pipeline
type: docker
name: Minitwit server deployment

trigger:
  branch:
  - main
  event:
  - push

steps:
- name: create and push docker image
  image: plugins/docker
  settings:
    registry: registry.digitalocean.com
    username:
      from_secret: token
    password:
      from_secret: token
    repo: registry.digitalocean.com/minitwit/minitwit-server
    tags:
      - "latest"
      - "${DRONE_BUILD_NUMBER}"
    dockerfile: minitwit/Dockerfile
    context: minitwit

- name: snyk scan
  image: docker
  environment:
    SNYK_TOKEN:
      from_secret: SNYK_TOKEN
    DOCKER_USERNAME:
      from_secret: token
    DOCKER_PASSWORD:
      from_secret: token
    IMAGE: registry.digitalocean.com/minitwit/minitwit-server
  volumes:
    - name: dockersock
      path: /var/run/docker.sock
  commands:
  - wget https://static.snyk.io/cli/latest/snyk-linux
  - chmod +x ./snyk-linux
  - apk add libstdc++ libgcc gcompat
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.digitalocean.com
  - docker pull $IMAGE:$DRONE_BUILD_NUMBER
  - ./snyk-linux auth $SNYK_TOKEN
  # Threshold can be low|medium|high|critical, see https://support.snyk.io/hc/en-us/articles/360001040078-How-is-a-vulnerability-s-severity-determined- low is too low for us
  - ./snyk-linux container test --app-vulns --nested-jars-depth=3 --severity-threshold=medium --file=minitwit/Dockerfile --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD $IMAGE:$DRONE_BUILD_NUMBER && res=$? || res=$?
  - docker rmi $IMAGE:$DRONE_BUILD_NUMBER
  - exit 0
  #- exit $res

- name: update live docker images
  image: alpine:3.15.0
  environment:
    DOCKER_USERNAME:
      from_secret: token
    DOCKER_PASSWORD:
      from_secret: token
    ROOT_PASSWORD:
      from_secret: root_password
    POSTGRES_PASSWORD:
      from_secret: POSTGRES_PASSWORD
    WEB_HOSTS:
      "164.92.150.233 206.189.13.233"
  commands:
  - apk add --no-cache sshpass openssh curl
  - chmod +x terraform/files/deploy.sh
  - terraform/files/deploy.sh "$ROOT_PASSWORD" "$WEB_HOSTS" "$DRONE_BUILD_NUMBER" "$DOCKER_USERNAME" "$DOCKER_PASSWORD" "$POSTGRES_PASSWORD"

- name: create github release
  image: ruby:alpine3.15
  environment:
    GH_TOKEN:
      from_secret: GH_TOKEN
  commands:
  - apk add --no-cache asciidoctor=2.0.16-r1
  - gem install asciidoctor-pdf
  - asciidoctor-pdf -r asciidoctor-pdf -b pdf -o docs.pdf docs/index.adoc
  # Install grep with support for P flag not available in bundled grep
  - apk add --no-cache git grep
  - wget https://github.com/cli/cli/releases/download/v2.6.0/gh_2.6.0_linux_amd64.tar.gz
  - tar xvfz gh_2.6.0_linux_amd64.tar.gz
  - cp gh_2.6.0_linux_amd64/bin/gh /usr/local/bin/gh
  # True is added so we can ignore env var warning
  - echo $GH_TOKEN | gh auth login --with-token || true
  # Assume first version tag is the one we want
  - version=$(grep -Po "(?<=\<version\>)[A-Z0-9\.\-]*" minitwit/pom.xml | head -n 1)
  - gh release create $version --generate-notes 'docs.pdf#Documentation'

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---

kind: signature
hmac: 3c88d3fbf4d79162bce60a7e6952fe0ad94a767ad95dde146c58e401b6437a8c
